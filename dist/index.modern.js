import{useState as e}from"react";function n(){return n=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)({}).hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},n.apply(null,arguments)}const r={google:"https://speech.googleapis.com/v1/speech:recognize"},t=(t,o)=>{const a=`${r[o.engine]}?key=${t}`,[s,i]=e({loading:!1,transcript:"",error:null});return{transcribe:e=>{const r=new FileReader;r.onloadend=()=>{if(!r.result||"string"!=typeof r.result)return;i(e=>n({},e,{loading:!0}));const e=r.result.split(",")[1];fetch(a,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({config:{sampleRateHertz:48e3,encoding:"WEBM_OPUS",languageCode:"en-US"},audio:{content:e}})}).then(e=>e.json()).then(e=>{const r=e.results.map(e=>e.alternatives[0].transcript).join("\n");i(e=>n({},e,{loading:!1,error:null,transcript:r}))}).catch(e=>{console.error("Error performing speech-to-text:",e),i(r=>n({},r,{loading:!1,transcript:"",error:e}))})},r.readAsDataURL(e)},response:s}};export{t as default};
//# sourceMappingURL=index.modern.js.map
